// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.furianrt.donotcallme.di.application;

import android.content.Context;
import com.furianrt.donotcallme.data.room.ContactDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideContactDatabaseFactory implements Factory<ContactDatabase> {
  private final AppModule module;

  private final Provider<Context> contextProvider;

  private final Provider<String> databaseNameProvider;

  public AppModule_ProvideContactDatabaseFactory(
      AppModule module, Provider<Context> contextProvider, Provider<String> databaseNameProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.databaseNameProvider = databaseNameProvider;
  }

  @Override
  public ContactDatabase get() {
    return Preconditions.checkNotNull(
        module.provideContactDatabase(contextProvider.get(), databaseNameProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<ContactDatabase> create(
      AppModule module, Provider<Context> contextProvider, Provider<String> databaseNameProvider) {
    return new AppModule_ProvideContactDatabaseFactory(
        module, contextProvider, databaseNameProvider);
  }
}
