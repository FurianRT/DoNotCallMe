// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.furianrt.donotcallme.di.presenter;

import com.furianrt.donotcallme.data.DataManager;
import com.furianrt.donotcallme.main.whitelist.WhiteListContract;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class PresenterModule_ProvideWhiteListPresenterFactory
    implements Factory<WhiteListContract.Presenter> {
  private final PresenterModule module;

  private final Provider<DataManager> dataManagerProvider;

  public PresenterModule_ProvideWhiteListPresenterFactory(
      PresenterModule module, Provider<DataManager> dataManagerProvider) {
    this.module = module;
    this.dataManagerProvider = dataManagerProvider;
  }

  @Override
  public WhiteListContract.Presenter get() {
    return Preconditions.checkNotNull(
        module.provideWhiteListPresenter(dataManagerProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<WhiteListContract.Presenter> create(
      PresenterModule module, Provider<DataManager> dataManagerProvider) {
    return new PresenterModule_ProvideWhiteListPresenterFactory(module, dataManagerProvider);
  }
}
