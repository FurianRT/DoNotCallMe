// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.furianrt.donotcallme.di.application;

import android.content.ContentResolver;
import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideContentResolverFactory implements Factory<ContentResolver> {
  private final AppModule module;

  private final Provider<Context> contextProvider;

  public AppModule_ProvideContentResolverFactory(
      AppModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public ContentResolver get() {
    return Preconditions.checkNotNull(
        module.provideContentResolver(contextProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<ContentResolver> create(
      AppModule module, Provider<Context> contextProvider) {
    return new AppModule_ProvideContentResolverFactory(module, contextProvider);
  }
}
